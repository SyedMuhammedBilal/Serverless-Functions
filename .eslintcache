[{"/Users/syed_.bilal/Desktop/count/src/reportWebVitals.js":"1","/Users/syed_.bilal/Desktop/count/src/App.js":"2","/Users/syed_.bilal/Desktop/count/src/index.js":"3","/Users/syed_.bilal/Desktop/count/src/graphql/getText.js":"4","/Users/syed_.bilal/Desktop/count/src/graphql/addText.js":"5","/Users/syed_.bilal/Desktop/count/src/apollo/Client.js":"6","/Users/syed_.bilal/Desktop/count/src/MissCupcake.js":"7"},{"size":362,"mtime":1610200374609,"results":"8","hashOfConfig":"9"},{"size":1230,"mtime":1611821168859,"results":"10","hashOfConfig":"9"},{"size":589,"mtime":1611656842611,"results":"11","hashOfConfig":"9"},{"size":133,"mtime":1611323901490,"results":"12","hashOfConfig":"9"},{"size":164,"mtime":1611324043182,"results":"13","hashOfConfig":"9"},{"size":269,"mtime":1611735408501,"results":"14","hashOfConfig":"9"},{"size":9379,"mtime":1611569233564,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1371v49",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/syed_.bilal/Desktop/count/src/reportWebVitals.js",[],"/Users/syed_.bilal/Desktop/count/src/App.js",["34","35"],"import React, { useEffect, useState } from 'react'\nimport Axios from 'axios'\n\nconst App = () => {\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const loadMessages = async () => {\n    try {\n      const res = await fetch('/.netlify/functions/getText');\n      const Messages = await res.json();\n      console.log(Messages);\n      setMessages(Messages);\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  useEffect(() => {\n    loadMessages();\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const body = { text };\n    try {\n      const res = await fetch('/.netlify/functions/addText', {\n        method: 'POST',\n        body : JSON.stringify(body)\n      })\n      setText('')\n    } catch (error) {\n      console.log(error)\n    }\n\n    setText('')\n  }\n\n\n  return (\n    <div>\n      <h1>Text Messages</h1>\n      <form onSubmit={handleSubmit}>\n        <input value={text} onChange={(e) => setText(e.target.value)} type='text' />\n        <button type=\"submit\">Send</button>\n      </form>\n      <div>\n        {messages.map((msg) => {\n          return (\n            <p> {msg.text} </p>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","/Users/syed_.bilal/Desktop/count/src/index.js",["36","37"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ApolloProvider } from '@apollo/client'\nimport { Client } from './apollo/Client'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["38","39"],"/Users/syed_.bilal/Desktop/count/src/graphql/getText.js",[],"/Users/syed_.bilal/Desktop/count/src/graphql/addText.js",[],["40","41"],"/Users/syed_.bilal/Desktop/count/src/apollo/Client.js",[],"/Users/syed_.bilal/Desktop/count/src/MissCupcake.js",[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":28,"column":13,"nodeType":"44","messageId":"45","endLine":28,"endColumn":16},{"ruleId":"42","severity":1,"message":"47","line":5,"column":10,"nodeType":"44","messageId":"45","endLine":5,"endColumn":24},{"ruleId":"42","severity":1,"message":"48","line":6,"column":10,"nodeType":"44","messageId":"45","endLine":6,"endColumn":16},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","'ApolloProvider' is defined but never used.","'Client' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"no-global-assign","no-unsafe-negation"]